{"createdAt":"2025-06-13T14:44:28.268Z","updatedAt":"2025-06-25T21:33:56.000Z","id":"Squ1eCdWGW56PD1u","name":"github (ref)","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"2fb3468a-deec-4712-811f-d915938f7a89","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[-520,340],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"4d01de74-51f1-4001-83cb-bb5b553802e8","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-220,640],"typeVersion":1},{"parameters":{},"id":"5d35bc48-56a3-4b73-b67f-d465e1b2ad8f","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-520,1000],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"8b75767e-6384-4cb7-b7b3-59d1c77f2804","name":"n8n","type":"n8n-nodes-base.n8n","position":[-80,440],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"4ebd8006-0fd7-4323-84d9-5525df14237d","name":"Return","type":"n8n-nodes-base.set","position":[1900,1000],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"adb8db71-169a-482b-bac2-58007f9f0307","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[360,860],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"a5a70a51-4ab5-4b87-9f36-28b9404e4450","name":"If file too large","type":"n8n-nodes-base.if","position":[140,940],"typeVersion":2},{"parameters":{},"id":"2ffa414c-fd55-474c-b41b-ab95488e74c3","name":"Merge Items","type":"n8n-nodes-base.merge","position":[580,1000],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"cf8a7d92-ef6e-4f28-bec7-cc0a6af5fc74","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[800,1000],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"1ca5a67b-b410-48ce-98b3-172e472d28cb","name":"Check Status","type":"n8n-nodes-base.switch","position":[1240,980],"typeVersion":1},{"parameters":{},"id":"be61aadc-a2f1-4042-9a8a-6b3cb67baf54","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1680,800],"typeVersion":1},{"parameters":{},"id":"b03eae98-4257-4048-80a6-6030d003ea5c","name":"File is different","type":"n8n-nodes-base.noOp","position":[1460,1000],"typeVersion":1},{"parameters":{},"id":"c6cf0524-66ce-4622-912d-8017134ff60b","name":"File is new","type":"n8n-nodes-base.noOp","position":[1460,1200],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"3c992d1c-107b-4987-96f9-097ee24847aa","name":"Create new file","type":"n8n-nodes-base.github","position":[1680,1200],"typeVersion":1,"webhookId":"540e2309-a4e7-4f75-bacf-44384c3b579e"},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"3f63a5a5-422d-4939-995a-0c4f77757ae7","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1680,1000],"typeVersion":1,"webhookId":"3f4d0664-72c0-40f3-9d5e-e9118dae2a6f"},{"parameters":{"options":{}},"id":"694640d5-4d52-4d83-bfbb-561b310d0dea","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[140,440],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"610c62d9-1534-4265-8d7a-c5a4327519ad","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[-520,540],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"92224ed8-0fce-459b-8246-01a82c37f534","name":"Create sub path","type":"n8n-nodes-base.set","position":[1020,1000],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"70906512-ebdc-4252-9423-fe35c2258c3d","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-260,-80],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"bdedf776-9eba-4b4d-b4aa-a62256248f5a","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-560,300],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"c206d79e-8ace-4329-9079-0ce34c6faf8d","name":"Starting Message","type":"n8n-nodes-base.slack","position":[-300,440],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"d77ed4c5-35a6-4a56-bf38-169d1c4db08c","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[360,440],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=âœ… Backup has completed - {{ $('n8n').all().length }} workflows have been processed.","otherOptions":{}},"id":"c7f5bb62-e8d2-4fbf-b0df-f4206f46aeba","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[360,240],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"3e3fbe7d-8cc5-44db-8c83-96b40d68c835","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[580,520],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"38c46af5-4928-4fca-8c1c-f245fd3687f6","name":"Get file data","type":"n8n-nodes-base.github","position":[-80,940],"typeVersion":1,"alwaysOutputData":true,"webhookId":"c37b780f-ff84-4739-8e0b-9b2d05dc67fe","continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"8a190572-65a8-4329-8ff5-ba68604604a8","name":"Config","type":"n8n-nodes-base.set","position":[-300,1000],"typeVersion":3.4}],"connections":{"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]},"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"03245ba5-3506-43d5-b91e-54d2c4edff43","triggerCount":0,"shared":[{"createdAt":"2025-06-13T14:44:28.289Z","updatedAt":"2025-06-13T14:44:28.289Z","role":"workflow:owner","workflowId":"Squ1eCdWGW56PD1u","projectId":"uOq34c8HjhQfCJ55"}],"tags":[]}